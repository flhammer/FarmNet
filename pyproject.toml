[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "openimpact"
readme = "README.md"
requires-python = ">=3.10"
authors = [{ name = "Florian Hammer", email = "florian.hammer@ost.ch" }]
maintainers = [{ name = "Florian Hammer", email = "florian.hammer@ost.ch" }]
dependencies = [
  "pandas",
  "numpy",
  "tomli",
  "haversine",
  "scipy",
  "networkx",
  "pyproj",
  "mlflow",
  "torch",
  "torch-geometric",
  "dynaconf",
  "lightning",
  "scikit-optimize"
]
description = "Placeholder for brief description"
copyright = "Florian Hammer"
license = { file = "LICENSE" }
dynamic = ["version"]

[project.urls]
Source = "https://gitlab.ost.ch/windenergyatost/openimpact/deployment"


[project.optional-dependencies]
dev = [
  "black>=22.10.0",
  "pytest>=7.2.0",
  "pytest-cov>=4.0.0",
  "ruff>=0.0.254",
  "hatch",
]
api = ["fastapi[all]", "pydantic", "requests", "uvicorn[standard]"]

graphgym = ["yacs", "ogb", "tensorboard", "tensorboardX"]

docs = ["sphinx", "furo"]

[tool.ruff]
ignore = ["E501"]
select = ["E", "F", "I", "W"]
line-length = 79
fixable = ["I"]
exclude = [".env", ".venv", "venv", "notebooks"]
show-source = true

[tool.black]
line-length = 79
extend-exclude = '''
/(
  | .env
  | .venv
  | venv
  | notebooks
)/
'''

[tool.hatch.version]
path = "openimpact/__about__.py"

[tool.hatch.envs.default.scripts]
cov = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=openimpact --cov=tests {args}"
no-cov = "cov --no-cov {args}"

[tool.coverage.run]
branch = true
parallel = true
omit = ["openimpact/__about__.py"]

[project.scripts]
predict = "openimpact.predict:predict"
predict_stream = "openimpact.predict:predict_stream"
kelmarsh_pipeline = "openimpact.data.pipeline:kelmarsh_pipeline"
train_gnn = "openimpact.model.train:train_gnn"
